{"ast":null,"code":"var _jsxFileName = \"/Users/yongjin/portfolio/game/src/component/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { styled } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Time = styled.div`\n\tfont-size:2.5em;\n\tcolor:#0a3c2f;\n`;\n_c = Time;\nconst Timer = () => {\n  _s();\n  const [seconds, setSeconds] = useState(0); //시간\n  const [record, setRecord] = useState(\"00:00\"); //기록\n\n  const formatTime = time => {\n    //타이머 두자릿수(10보다 작으면 0 붙여주기)\n    return time < 10 ? \"0\" + time : time.toString();\n  };\n  useEffect(() => {\n    //게임 시작시 타이머 작동\n\n    const timer = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds + 1);\n    }, 1000);\n    const minutes = Math.floor(seconds / 60); //60초가 되면 1분으로 표시\n    const remainingSeconds = seconds % 60; //60초 이후 다시 0부터 초단위 시작(seconds % 60 = 누적시간에서 60을 나누고 남은 값)\n    const progress = formatTime(minutes) + \":\" + formatTime(remainingSeconds);\n    setRecord(progress);\n    return () => clearInterval(timer); // 컴포넌트가 언마운트될 때 타이머 정리\n  }, [seconds]);\n  return /*#__PURE__*/_jsxDEV(Time, {\n    children: record\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n_s(Timer, \"XlUw7gLCf17DMi/y+N9m+ZTzdUw=\");\n_c2 = Timer;\nexport default Timer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Time\");\n$RefreshReg$(_c2, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Time","div","_c","Timer","_s","seconds","setSeconds","record","setRecord","formatTime","time","toString","timer","setInterval","prevSeconds","minutes","Math","floor","remainingSeconds","progress","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/yongjin/portfolio/game/src/component/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { styled } from 'styled-components';\n\nconst Time = styled.div`\n\tfont-size:2.5em;\n\tcolor:#0a3c2f;\n`;\n\nconst Timer = () => {\n\tconst [seconds, setSeconds] = useState(0); //시간\n\tconst [record, setRecord] = useState(\"00:00\"); //기록\n\n\tconst formatTime = (time) => { //타이머 두자릿수(10보다 작으면 0 붙여주기)\n\t\treturn time < 10 ? \"0\" + time : time.toString();\n\t}\n\n\tuseEffect(() => { //게임 시작시 타이머 작동\n\t\t\n\t\tconst timer = setInterval(() => {\n\t\t\tsetSeconds((prevSeconds) => prevSeconds + 1);\n\t\t}, 1000);\n\n\t\tconst minutes = Math.floor(seconds / 60); //60초가 되면 1분으로 표시\n\t\tconst remainingSeconds = seconds % 60; //60초 이후 다시 0부터 초단위 시작(seconds % 60 = 누적시간에서 60을 나누고 남은 값)\n\t\tconst progress = formatTime(minutes) + \":\" + formatTime(remainingSeconds);\n\t\tsetRecord(progress);\n\t\t\n\n    return () => clearInterval(timer); // 컴포넌트가 언마운트될 때 타이머 정리\n  }, [seconds]);\n\t\n\treturn (\n\t\t<Time>\n\t\t\t{record}\n\t\t\t{/* run(게임시작) 이 true일때 타이머 작동 */}\n\t\t</Time>\n\t)\n}\n\nexport default Timer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAI;AACxB;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,IAAI;AAKV,MAAMG,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE/C,MAAMc,UAAU,GAAIC,IAAI,IAAK;IAAE;IAC9B,OAAOA,IAAI,GAAG,EAAE,GAAG,GAAG,GAAGA,IAAI,GAAGA,IAAI,CAACC,QAAQ,CAAC,CAAC;EAChD,CAAC;EAEDf,SAAS,CAAC,MAAM;IAAE;;IAEjB,MAAMgB,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC/BP,UAAU,CAAEQ,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;IAC7C,CAAC,EAAE,IAAI,CAAC;IAER,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACZ,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC;IAC1C,MAAMa,gBAAgB,GAAGb,OAAO,GAAG,EAAE,CAAC,CAAC;IACvC,MAAMc,QAAQ,GAAGV,UAAU,CAACM,OAAO,CAAC,GAAG,GAAG,GAAGN,UAAU,CAACS,gBAAgB,CAAC;IACzEV,SAAS,CAACW,QAAQ,CAAC;IAGjB,OAAO,MAAMC,aAAa,CAACR,KAAK,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEd,oBACCN,OAAA,CAACC,IAAI;IAAAqB,QAAA,EACHd;EAAM;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAET,CAAC;AAAArB,EAAA,CA7BKD,KAAK;AAAAuB,GAAA,GAALvB,KAAK;AA+BX,eAAeA,KAAK;AAAA,IAAAD,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}