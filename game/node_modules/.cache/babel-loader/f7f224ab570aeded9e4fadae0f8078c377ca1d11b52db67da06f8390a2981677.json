{"ast":null,"code":"var _jsxFileName = \"/Users/yongjin/\\u110B\\u116D\\u11BC\\u110C\\u1175\\u11AB/\\u1111\\u1169\\u1110\\u1173\\u1111\\u1169\\u11AF\\u1105\\u1175\\u110B\\u1169/game/src/component/MemoryGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { styled } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrap = styled.div`\n\twidth:100%;\n\tmax-width:440px;\n\tmargin:10px auto 20px;\n\tpadding-top:100%;\n\tposition:relative;\n\t>div{\n\t\twidth:100%;\n\t\theight:100%;\n\t\tdisplay:flex;\n\t\tflex-wrap:wrap;\n\t\tgap:3.33%;\n\t\ttransform-style:preserve-3d;\n\t\tperspective:500px;\n\t\tposition:absolute;\n\t\tinset:0;\n\t}\n`;\n_c = Wrap;\nconst Card = styled.div`\n\twidth:22.5%;\n\tpadding-top:22.5%;\n\tdisplay:flex;\n\tjustify-content:center;\n\talign-items:center;\n\tposition:relative;\n\t>div{\n\t\twidth:100%;\n\t\theight:100%;\n\t\tdisplay:flex;\n\t\tjustify-content:center;\n\t\talign-items:center;\n\t\tfont-size:3em;\n\t\tbackground-color:#fff;\n\t\ttransition:0.25s;\n\t\ttransform:rotateY(180deg);\n\t\tcursor:pointer;\n\t\tposition:absolute;\n\t\tinset:0;\n\t\t&:after{\n\t\t\tcontent:\"\";\n\t\t\tposition:absolute;\n\t\t\tinset:0;\n\t\t\tbackground-color:#209d70;\n\t\t\ttransform:rotateY(0deg);\n\t\t\tbackface-visibility:hidden;\n\t\t}\n\t\t&.open{\n\t\t\ttransform:rotateY(0deg);\n\t\t\t&:after{\n\t\t\t\ttransform: rotateY(180deg);\n\t\t\t}\n\t\t}\n\t\t&.match{\n\t\t\tpointer-events:none;\n\t\t\t&:after{\n\t\t\t\ttransform: rotateY(180deg);\n\t\t\t}\n\t\t}\n\t}\n`;\n_c2 = Card;\nconst MemoryGame = ({\n  setRun,\n  setFinish,\n  resetCount,\n  setResetCount\n}) => {\n  _s();\n  const [randomEmojis, setRandomEmojis] = useState([]);\n  const [open, setOpen] = useState([]);\n  const [match, setMatch] = useState([]);\n  const [start, setStart] = useState(false);\n  useEffect(() => {\n    //랜덤순으로 이모지 카드 만들기(리셋버튼 클릭시 재실행)\n    const shuffleEmojis = () => {\n      //랜덤순으로 이모지 카드 만들기\n      const emojis = [\"😁\", \"😁\", \"🤪\", \"🤪\", \"🥳\", \"🥳\", \"😭\", \"😭\", \"🤢\", \"🤢\", \"🥵\", \"🥵\", \"😱\", \"😱\", \"🥶\", \"🥶\"];\n      const shuffled = emojis.sort(() => Math.random() > 0.5 ? 1 : -1);\n      setStart(false);\n      setOpen([]);\n      setMatch([]);\n      setResetCount(0);\n      setRandomEmojis(shuffled);\n    };\n    if (resetCount > 0) shuffleEmojis();\n  }, [resetCount]);\n  useEffect(() => {\n    if (open.length === 2) {\n      //두장의 카드를 오픈한 경우\n      const [idx1, idx2] = open;\n      const emoji1 = randomEmojis[idx1];\n      const emoji2 = randomEmojis[idx2];\n      if (emoji1 === emoji2) {\n        //두 카드의 이모지가 동일한 경우\n        setTimeout(() => {\n          setMatch([...match, idx1, idx2]);\n          setOpen([]);\n        }, 500);\n      } else {\n        //두 카드의 이모지가 다른 경우\n        setTimeout(() => {\n          setOpen([]);\n        }, 500);\n      }\n    }\n    if (randomEmojis.length > 0 && match.length > 0 && randomEmojis.length === match.length) {\n      //모든 카드의 이모지가 동일한 경우\n      setTimeout(() => {\n        if (start) {\n          setRun(false); //시작 props\n          setFinish(true); //종료 props\n          setStart(false);\n        }\n      }, 300);\n    }\n  }, [open, randomEmojis, match, start, setRun, setFinish]);\n  const select = idx => {\n    //카드 오픈 이벤트\n    if (open.length >= 2) return; //2개의 카드가 열려있으면 이벤트 무시\n    if (open.includes(idx)) return; //이미 선택된 카드면 이벤트 무시\n    if (!start) {\n      setRun(true);\n      setStart(true);\n    }\n    setOpen([...open, idx]); //선택된 카드 배열에 추가\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: randomEmojis.map((emoji, idx) => /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => select(idx),\n          className: open.includes(idx) ? \"open\" : match.includes(idx) ? \"match\" : \"\",\n          children: emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 3\n  }, this);\n};\n_s(MemoryGame, \"YzDo0tmUoN4pXnl1zh1Ba3Npmlk=\");\n_c3 = MemoryGame;\nexport default MemoryGame;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Wrap","div","_c","Card","_c2","MemoryGame","setRun","setFinish","resetCount","setResetCount","_s","randomEmojis","setRandomEmojis","open","setOpen","match","setMatch","start","setStart","shuffleEmojis","emojis","shuffled","sort","Math","random","length","idx1","idx2","emoji1","emoji2","setTimeout","select","idx","includes","children","map","emoji","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/yongjin/용진/포트폴리오/game/src/component/MemoryGame.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { styled } from 'styled-components';\n\nconst Wrap = styled.div`\n\twidth:100%;\n\tmax-width:440px;\n\tmargin:10px auto 20px;\n\tpadding-top:100%;\n\tposition:relative;\n\t>div{\n\t\twidth:100%;\n\t\theight:100%;\n\t\tdisplay:flex;\n\t\tflex-wrap:wrap;\n\t\tgap:3.33%;\n\t\ttransform-style:preserve-3d;\n\t\tperspective:500px;\n\t\tposition:absolute;\n\t\tinset:0;\n\t}\n`;\nconst Card = styled.div`\n\twidth:22.5%;\n\tpadding-top:22.5%;\n\tdisplay:flex;\n\tjustify-content:center;\n\talign-items:center;\n\tposition:relative;\n\t>div{\n\t\twidth:100%;\n\t\theight:100%;\n\t\tdisplay:flex;\n\t\tjustify-content:center;\n\t\talign-items:center;\n\t\tfont-size:3em;\n\t\tbackground-color:#fff;\n\t\ttransition:0.25s;\n\t\ttransform:rotateY(180deg);\n\t\tcursor:pointer;\n\t\tposition:absolute;\n\t\tinset:0;\n\t\t&:after{\n\t\t\tcontent:\"\";\n\t\t\tposition:absolute;\n\t\t\tinset:0;\n\t\t\tbackground-color:#209d70;\n\t\t\ttransform:rotateY(0deg);\n\t\t\tbackface-visibility:hidden;\n\t\t}\n\t\t&.open{\n\t\t\ttransform:rotateY(0deg);\n\t\t\t&:after{\n\t\t\t\ttransform: rotateY(180deg);\n\t\t\t}\n\t\t}\n\t\t&.match{\n\t\t\tpointer-events:none;\n\t\t\t&:after{\n\t\t\t\ttransform: rotateY(180deg);\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst MemoryGame = ({ setRun, setFinish, resetCount, setResetCount }) => {\n\tconst [randomEmojis, setRandomEmojis] = useState([]);\n\tconst [open, setOpen] = useState([]);\n\tconst [match, setMatch] = useState([]);\n\tconst [start, setStart] = useState(false);\n\n\t\n\t\n\tuseEffect(() => { //랜덤순으로 이모지 카드 만들기(리셋버튼 클릭시 재실행)\n\t\tconst shuffleEmojis = () => { //랜덤순으로 이모지 카드 만들기\n\t\t\tconst emojis = [\"😁\", \"😁\", \"🤪\", \"🤪\", \"🥳\", \"🥳\", \"😭\", \"😭\", \"🤢\", \"🤢\", \"🥵\", \"🥵\", \"😱\", \"😱\", \"🥶\", \"🥶\"];\n\t\t\tconst shuffled = emojis.sort(() => (Math.random() > 0.5 ? 1 : -1));\n\t\t\tsetStart(false);\n\t\t\tsetOpen([]);\n\t\t\tsetMatch([]);\n\t\t\tsetResetCount(0);\n\t\t\tsetRandomEmojis(shuffled);\n\t\t};\n\t\t\n\t\tif(resetCount > 0) shuffleEmojis();\n  }, [resetCount]);\n\n\tuseEffect(() => {\n\t\tif(open.length === 2) { //두장의 카드를 오픈한 경우\n\t\t\tconst [idx1, idx2] = open;\n\t\t\tconst emoji1 = randomEmojis[idx1];\n\t\t\tconst emoji2 = randomEmojis[idx2];\n\n\t\t\tif(emoji1 === emoji2) { //두 카드의 이모지가 동일한 경우\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetMatch([...match, idx1, idx2]);\n\t\t\t\t\tsetOpen([]);\n\t\t\t\t}, 500)\n\t\t\t} else{ //두 카드의 이모지가 다른 경우\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetOpen([]);\n\t\t\t\t}, 500)\n\t\t\t}\n\t\t}\n\n\t\tif(randomEmojis.length > 0 && match.length > 0 && randomEmojis.length === match.length) {\n\t\t\t//모든 카드의 이모지가 동일한 경우\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(start) {\n\t\t\t\t\tsetRun(false); //시작 props\n\t\t\t\t\tsetFinish(true); //종료 props\n\t\t\t\t\tsetStart(false);\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t}\n\t}, [open, randomEmojis, match, start, setRun, setFinish])\n\n\tconst select = (idx) => { //카드 오픈 이벤트\n\t\tif(open.length >= 2) return; //2개의 카드가 열려있으면 이벤트 무시\n\t\tif(open.includes(idx)) return; //이미 선택된 카드면 이벤트 무시\n\t\tif(!start) {\n\t\t\tsetRun(true);\n\t\t\tsetStart(true);\n\t\t}\n\n\t\tsetOpen([...open, idx]) //선택된 카드 배열에 추가\n\t}\n\n\treturn (\n\t\t<Wrap>\n\t\t\t<div>\n\t\t\t\t{randomEmojis.map((emoji, idx) => (\n\t\t\t\t\t<Card key={idx}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonClick={() => select(idx)}\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\topen.includes(idx)\n\t\t\t\t\t\t\t\t? \"open\"\n\t\t\t\t\t\t\t\t: match.includes(idx)\n\t\t\t\t\t\t\t\t? \"match\"\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{emoji}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t))}\n\t\t\t</div>\n    </Wrap>\n\t)\n}\n\nexport default MemoryGame"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAjBIF,IAAI;AAkBV,MAAMG,IAAI,GAAGN,MAAM,CAACI,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAzCID,IAAI;AA2CV,MAAME,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,SAAS;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAIzCC,SAAS,CAAC,MAAM;IAAE;IACjB,MAAMuB,aAAa,GAAGA,CAAA,KAAM;MAAE;MAC7B,MAAMC,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAC/G,MAAMC,QAAQ,GAAGD,MAAM,CAACE,IAAI,CAAC,MAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;MAClEN,QAAQ,CAAC,KAAK,CAAC;MACfJ,OAAO,CAAC,EAAE,CAAC;MACXE,QAAQ,CAAC,EAAE,CAAC;MACZP,aAAa,CAAC,CAAC,CAAC;MAChBG,eAAe,CAACS,QAAQ,CAAC;IAC1B,CAAC;IAED,IAAGb,UAAU,GAAG,CAAC,EAAEW,aAAa,CAAC,CAAC;EAClC,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEjBZ,SAAS,CAAC,MAAM;IACf,IAAGiB,IAAI,CAACY,MAAM,KAAK,CAAC,EAAE;MAAE;MACvB,MAAM,CAACC,IAAI,EAAEC,IAAI,CAAC,GAAGd,IAAI;MACzB,MAAMe,MAAM,GAAGjB,YAAY,CAACe,IAAI,CAAC;MACjC,MAAMG,MAAM,GAAGlB,YAAY,CAACgB,IAAI,CAAC;MAEjC,IAAGC,MAAM,KAAKC,MAAM,EAAE;QAAE;QACvBC,UAAU,CAAC,MAAM;UAChBd,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEW,IAAI,EAAEC,IAAI,CAAC,CAAC;UAChCb,OAAO,CAAC,EAAE,CAAC;QACZ,CAAC,EAAE,GAAG,CAAC;MACR,CAAC,MAAK;QAAE;QACPgB,UAAU,CAAC,MAAM;UAChBhB,OAAO,CAAC,EAAE,CAAC;QACZ,CAAC,EAAE,GAAG,CAAC;MACR;IACD;IAEA,IAAGH,YAAY,CAACc,MAAM,GAAG,CAAC,IAAIV,KAAK,CAACU,MAAM,GAAG,CAAC,IAAId,YAAY,CAACc,MAAM,KAAKV,KAAK,CAACU,MAAM,EAAE;MACvF;MACAK,UAAU,CAAC,MAAM;QAChB,IAAGb,KAAK,EAAE;UACTX,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;UACfC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;UACjBW,QAAQ,CAAC,KAAK,CAAC;QAChB;MACD,CAAC,EAAE,GAAG,CAAC;IACR;EACD,CAAC,EAAE,CAACL,IAAI,EAAEF,YAAY,EAAEI,KAAK,EAAEE,KAAK,EAAEX,MAAM,EAAEC,SAAS,CAAC,CAAC;EAEzD,MAAMwB,MAAM,GAAIC,GAAG,IAAK;IAAE;IACzB,IAAGnB,IAAI,CAACY,MAAM,IAAI,CAAC,EAAE,OAAO,CAAC;IAC7B,IAAGZ,IAAI,CAACoB,QAAQ,CAACD,GAAG,CAAC,EAAE,OAAO,CAAC;IAC/B,IAAG,CAACf,KAAK,EAAE;MACVX,MAAM,CAAC,IAAI,CAAC;MACZY,QAAQ,CAAC,IAAI,CAAC;IACf;IAEAJ,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEmB,GAAG,CAAC,CAAC,EAAC;EACzB,CAAC;;EAED,oBACCjC,OAAA,CAACC,IAAI;IAAAkC,QAAA,eACJnC,OAAA;MAAAmC,QAAA,EACEvB,YAAY,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAEJ,GAAG,kBAC5BjC,OAAA,CAACI,IAAI;QAAA+B,QAAA,eACJnC,OAAA;UACCsC,OAAO,EAAEA,CAAA,KAAMN,MAAM,CAACC,GAAG,CAAE;UAC3BM,SAAS,EACRzB,IAAI,CAACoB,QAAQ,CAACD,GAAG,CAAC,GAChB,MAAM,GACNjB,KAAK,CAACkB,QAAQ,CAACD,GAAG,CAAC,GACnB,OAAO,GACP,EACF;UAAAE,QAAA,EAEAE;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC,GAZIV,GAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEX,CAAC;AAAAhC,EAAA,CArFKL,UAAU;AAAAsC,GAAA,GAAVtC,UAAU;AAuFhB,eAAeA,UAAU;AAAA,IAAAH,EAAA,EAAAE,GAAA,EAAAuC,GAAA;AAAAC,YAAA,CAAA1C,EAAA;AAAA0C,YAAA,CAAAxC,GAAA;AAAAwC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}