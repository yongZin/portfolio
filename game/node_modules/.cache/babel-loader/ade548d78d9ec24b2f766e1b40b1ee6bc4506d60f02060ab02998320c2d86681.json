{"ast":null,"code":"var _jsxFileName = \"/Users/yongjin/\\u110B\\u116D\\u11BC\\u110C\\u1175\\u11AB/\\u1111\\u1169\\u1110\\u1173\\u1111\\u1169\\u11AF\\u1105\\u1175\\u110B\\u1169/game/src/component/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const [seconds, SetSeconds] = useState(0); //시간\n\n  const formatTime = time => {\n    //타이머 두자릿수(10보다 작으면 0 붙여주기)\n    return time < 10 ? \"0\" + time : time.toString();\n  };\n  const updateTime = () => {\n    //분단위 시간 계산\n    const minutes = Math.floor(seconds / 60); //60초가 되면 1분으로 표시\n    const remainingSeconds = seconds % 60; //60초 이후 다시 0부터 초단위 시작(seconds % 60 = 누적시간에서 60을 나누고 남은 값)\n\n    return formatTime(minutes) + \":\" + formatTime(remainingSeconds);\n  };\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds + 1);\n    }, 1000);\n    return () => clearInterval(timer); // 컴포넌트가 언마운트될 때 타이머 정리\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: updateTime()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n_s(Timer, \"wz8rLnjzLZdz+6zBu3iWIGyu9z8=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","_s","seconds","SetSeconds","formatTime","time","toString","updateTime","minutes","Math","floor","remainingSeconds","timer","setInterval","setSeconds","prevSeconds","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yongjin/용진/포트폴리오/game/src/component/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst Timer = () => {\n\tconst [seconds, SetSeconds] = useState(0); //시간\n\n\tconst formatTime = (time) => { //타이머 두자릿수(10보다 작으면 0 붙여주기)\n\t\treturn time < 10 ? \"0\" + time : time.toString();\n\t}\n\n\tconst updateTime = () => { //분단위 시간 계산\n    const minutes = Math.floor(seconds / 60); //60초가 되면 1분으로 표시\n    const remainingSeconds = seconds % 60; //60초 이후 다시 0부터 초단위 시작(seconds % 60 = 누적시간에서 60을 나누고 남은 값)\n\n    return formatTime(minutes) + \":\" + formatTime(remainingSeconds);\n  };\n\n\tuseEffect(() => {\n    const timer = setInterval(() => {\n      setSeconds((prevSeconds) => prevSeconds + 1);\n    }, 1000);\n\n    return () => clearInterval(timer); // 컴포넌트가 언마운트될 때 타이머 정리\n  }, []);\n\n\treturn (\n\t\t<div>{updateTime()}</div>\n\t)\n}\n\nexport default Timer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE3C,MAAMQ,UAAU,GAAIC,IAAI,IAAK;IAAE;IAC9B,OAAOA,IAAI,GAAG,EAAE,GAAG,GAAG,GAAGA,IAAI,GAAGA,IAAI,CAACC,QAAQ,CAAC,CAAC;EAChD,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IAAE;IACxB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACR,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC;IAC1C,MAAMS,gBAAgB,GAAGT,OAAO,GAAG,EAAE,CAAC,CAAC;;IAEvC,OAAOE,UAAU,CAACI,OAAO,CAAC,GAAG,GAAG,GAAGJ,UAAU,CAACO,gBAAgB,CAAC;EACjE,CAAC;EAEFd,SAAS,CAAC,MAAM;IACb,MAAMe,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BC,UAAU,CAAEC,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;IAC9C,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACJ,KAAK,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEP,oBACCb,OAAA;IAAAkB,QAAA,EAAMV,UAAU,CAAC;EAAC;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAE3B,CAAC;AAAApB,EAAA,CAzBKD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA2BX,eAAeA,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}